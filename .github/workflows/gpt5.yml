name: GPT5 Query

on:
  repository_dispatch:
    types: [gpt5_query]

jobs:
  run_gpt5:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Python installieren
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3️⃣ Abhängigkeiten installieren
      - name: Install dependencies
        run: pip install requests

      # 4️⃣ GitHub API-Aufruf & Antwort in response.txt schreiben
      - name: Generate response via GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_PAT }}  # <-- GitHub PAT für Aktionen
        run: |
          python - <<EOF
import os
import requests
import base64

# 1️⃣ Prompt aus workflow event
prompt = "${{ github.event.client_payload.prompt }}"

# 2️⃣ GitHub Repo & Token
OWNER = "${{ github.repository_owner }}"
REPO = "${{ github.repository }}"
GITHUB_TOKEN = os.getenv("GITHUB_TOKEN")

# 3️⃣ URL für response.txt
url = f"https://api.github.com/repos/{OWNER}/{REPO}/contents/response.txt"

headers = {"Authorization": f"token {GITHUB_TOKEN}", "Accept": "application/vnd.github+json"}

# 4️⃣ Prüfen ob response.txt schon existiert
r = requests.get(url, headers=headers)
sha = r.json()["sha"] if r.status_code == 200 else None

# 5️⃣ Hier KI-Logik einfügen oder Platzhalter verwenden
# ⬅️ HIER ECHTE KI-API EINSETZEN
answer = f"Prompt: {prompt}\nAntwort: (Platzhalter – hier KI einfügen)"

# 6️⃣ payload für GitHub API
payload = {
    "message": "Antwort generiert",
    "content": base64.b64encode(answer.encode("utf-8")).decode("utf-8"),
}
if sha:
    payload["sha"] = sha

# 7️⃣ Datei erstellen oder aktualisieren
resp = requests.put(url, json=payload, headers=headers)
if resp.status_code not in [200, 201]:
    raise Exception(f"Fehler beim Schreiben von response.txt: {resp.text}")
EOF

      # 5️⃣ Commit & Push response.txt (falls nicht automatisch)
      - name: Commit response
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add response.txt
          git commit -m "GPT-5 Antwort generiert" || echo "Keine Änderungen zum committen"
          git push
