name: GPT5 Query

on:
  repository_dispatch:
    types: [gpt5_query]

jobs:
  run_gpt5:
    runs-on: ubuntu-latest

    steps:
      # Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v3

      # Python installieren
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Abhängigkeiten installieren
      - name: Install dependencies
        run: pip install requests azure-ai-inference

      # GPT-5 / GitHub Models Antwort generieren
      - name: Generate GPT-5 response
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
        run: |
          python - <<EOF
import os
from azure.ai.inference import ChatCompletionsClient
from azure.ai.inference.models import SystemMessage, UserMessage
from azure.core.credentials import AzureKeyCredential

prompt = "${{ github.event.client_payload.prompt }}"
token = os.getenv("GITHUB_PAT")

endpoint = "https://models.github.ai/inference"
model = "openai/gpt-5"

client = ChatCompletionsClient(
    endpoint=endpoint,
    credential=AzureKeyCredential(token),
)

try:
    response = client.complete(
        messages=[
            SystemMessage("You are a helpful assistant."),
            UserMessage(prompt)
        ],
        model=model
    )
    answer = response.choices[0].message.content
except Exception as e:
    answer = f"❌ Fehler bei GitHub Model API: {e}"

with open("response.txt", "w", encoding="utf-8") as f:
    f.write(answer)
EOF

      # Commit & Push response.txt
      - name: Commit & push response
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${GITHUB_PAT}@github.com/${{ github.repository }}.git
          git add response.txt
          git commit -m "GPT-5 Antwort generiert" || echo "Keine Änderungen zum Committen"
          git push
