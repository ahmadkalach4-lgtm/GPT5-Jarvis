name: GPT5 Query

on:
  repository_dispatch:
    types: [gpt5_query]

jobs:
  run_gpt5:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Python installieren
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3️⃣ Abhängigkeiten installieren
      - name: Install dependencies
        run: pip install azure-ai-inference

      # 4️⃣ GitHub Models Antwort generieren
      - name: Generate GPT-5 response
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_PAT }}
        run: |
          python - <<EOF
import os
from azure.ai.inference import ChatCompletionsClient
from azure.ai.inference.models import SystemMessage, UserMessage
import base64

endpoint = "https://models.github.ai/inference"
model = "openai/gpt-5"
token = os.environ["GITHUB_TOKEN"]

client = ChatCompletionsClient(
    endpoint=endpoint,
    credential=token,
)

prompt = "${{ github.event.client_payload.prompt }}"

response = client.complete(
    messages=[
        SystemMessage("Du bist ein hilfreicher Assistent."),
        UserMessage(prompt),
    ],
    model=model
)

answer = response.choices[0].message.content

# Antwort in response.txt schreiben
with open("response.txt", "w", encoding="utf-8") as f:
    f.write(answer)
EOF

      # 5️⃣ Commit & Push response.txt
      - name: Commit & Push response
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${GITHUB_PAT}@github.com/${{ github.repository }}.git
          git add response.txt
          git commit -m "GPT-5 Antwort generiert" || echo "Keine Änderungen"
          git push
